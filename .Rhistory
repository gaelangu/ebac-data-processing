fit
train = read.csv('salary-train.csv')
test = read.csv('salary-test.csv')
str(train)
str(test)
# train set
train$workclass = as.factor(gsub('?', NA, train$workclass, fixed = T))
train$native.country = as.factor(gsub('?', NA, train$native.country, fixed = T))
train$occupation = as.factor(gsub('?', NA, train$occupation, fixed = T))
# test set
test$workclass = as.factor(gsub('?', NA, test$workclass, fixed = T))
test$native.country = as.factor(gsub('?', NA, test$native.country, fixed = T))
test$occupation = as.factor(gsub('?', NA, test$occupation, fixed = T))
train = train[complete.cases(train), ]
test = test[complete.cases(test), ]
str(train)
str(test)
fit = suppressWarnings(glm(formula = class ~ .,
family = binomial,
data = train))
prob_pred = predict(fit, type = 'response', newdata = test[-14])
y_pred = ifelse(prob_pred > 0.5, 1, 0)
### Confusion Matrix
cm = table(test[, 14], y_pred)
cm
fit
print(fit)
summary(fit)
fit_1 = suppressWarnings(glm(formula = class ~ . -race -relationship,
family = binomial,
data = train))
summary(fit_1)
fit_1 = suppressWarnings(glm(formula = class ~ . -race -relationship -native.country,
family = binomial,
data = train))
summary(fit_1)
fit_1 = suppressWarnings(glm(formula = class ~ . -race -relationship -native.country,
family = binomial,
data = train))
summary(fit_1)
fit_1 = suppressWarnings(glm(formula = class ~ . -race -relationship -native.country -education,
family = binomial,
data = train))
summary(fit_1)
fit_1 = suppressWarnings(glm(formula = class ~ . -race -relationship -native.country,
family = binomial,
data = train))
summary(fit_1)
prob_pred_1 = predict(fit_1, type = 'response', newdata = test[-14])
y_pred_1 = ifelse(prob_pred_1 > 0.5, 1, 0)
cm_1 = table(test[, 14], y_pred_1)
cm_1
fit_1 = suppressWarnings(glm(formula = class ~ . -race,
family = binomial,
data = train))
summary(fit_1)
prob_pred_1 = predict(fit_1, type = 'response', newdata = test[-14])
y_pred_1 = ifelse(prob_pred_1 > 0.5, 1, 0)
cm_1 = table(test[, 14], y_pred_1)
cm_1
fit_1 = suppressWarnings(glm(formula = class ~ . -race -relationship,
family = binomial,
data = train))
summary(fit_1)
prob_pred_1 = predict(fit_1, type = 'response', newdata = test[-14])
y_pred_1 = ifelse(prob_pred_1 > 0.5, 1, 0)
cm_1 = table(test[, 14], y_pred_1)
cm_1
fit_1 = suppressWarnings(glm(formula = class ~ . -relationship,
family = binomial,
data = train))
summary(fit_1)
prob_pred_1 = predict(fit_1, type = 'response', newdata = test[-14])
y_pred_1 = ifelse(prob_pred_1 > 0.5, 1, 0)
cm_1 = table(test[, 14], y_pred_1)
cm_1
fit_1 = suppressWarnings(glm(formula = class ~ . - race,
family = binomial,
data = train))
summary(fit_1)
prob_pred_1 = predict(fit_1, type = 'response', newdata = test[-14])
y_pred_1 = ifelse(prob_pred_1 > 0.5, 1, 0)
cm_1 = table(test[, 14], y_pred_1)
cm_1
sal_pca = princomp(train[-14])
View(train)
library(corrgram)
corrgram(train[-14])
corrgram(train[-14], order = T)
library(corrplot)
sal_cor = cor(train[-14])
sal_corrplot = corrplot(train[-14])
fit_2 = suppressWarnings(glm(formula = class ~ . - race - marital,
family = binomial,
data = train))
summary(fit_2)
prob_pred_2 = predict(fit_2, type = 'response', newdata = test[-14])
y_pred_2 = ifelse(prob_pred_2 > 0.5, 1, 0)
cm_2 = table(test[, 14], y_pred_2)
cm_2
fit_2 = suppressWarnings(glm(formula = class ~ . - race - relationship,
family = binomial,
data = train))
summary(fit_2)
prob_pred_2 = predict(fit_2, type = 'response', newdata = test[-14])
y_pred_2 = ifelse(prob_pred_2 > 0.5, 1, 0)
cm_2 = table(test[, 14], y_pred_2)
cm_2
prob_pred = predict(fit, type = 'response', newdata = test[-14])
y_pred = ifelse(prob_pred > 0.5, '>50K', '<=50K')
cm = table(test[, 14], y_pred)
cm
prob_pred_1 = predict(fit_1, type = 'response', newdata = test[-14])
y_pred_1 = ifelse(prob_pred_1 > 0.5, '>50K', '<=50K')
cm_1 = table(test[, 14], y_pred_1)
cm_1
prob_pred_2 = predict(fit_2, type = 'response', newdata = test[-14])
y_pred_2 = ifelse(prob_pred_2 > 0.5, '>50K', '<=50K')
cm_2 = table(test[, 14], y_pred_2)
cm_2
